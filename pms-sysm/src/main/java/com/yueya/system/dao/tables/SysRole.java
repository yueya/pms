/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables;


import com.yueya.system.dao.Indexes;
import com.yueya.system.dao.Jeesite;
import com.yueya.system.dao.Keys;
import com.yueya.system.dao.tables.records.SysRoleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 角色表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRole extends TableImpl<SysRoleRecord> {

    private static final long serialVersionUID = -646358719;

    /**
     * The reference instance of <code>jeesite.sys_role</code>
     */
    public static final SysRole SYS_ROLE = new SysRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysRoleRecord> getRecordType() {
        return SysRoleRecord.class;
    }

    /**
     * The column <code>jeesite.sys_role.id</code>. 编号
     */
    public final TableField<SysRoleRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "编号");

    /**
     * The column <code>jeesite.sys_role.office_id</code>. 归属机构
     */
    public final TableField<SysRoleRecord, String> OFFICE_ID = createField("office_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "归属机构");

    /**
     * The column <code>jeesite.sys_role.name</code>. 角色名称
     */
    public final TableField<SysRoleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "角色名称");

    /**
     * The column <code>jeesite.sys_role.enname</code>. 英文名称
     */
    public final TableField<SysRoleRecord, String> ENNAME = createField("enname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "英文名称");

    /**
     * The column <code>jeesite.sys_role.role_type</code>. 角色类型
     */
    public final TableField<SysRoleRecord, String> ROLE_TYPE = createField("role_type", org.jooq.impl.SQLDataType.VARCHAR(255), this, "角色类型");

    /**
     * The column <code>jeesite.sys_role.data_scope</code>. 数据范围
     */
    public final TableField<SysRoleRecord, String> DATA_SCOPE = createField("data_scope", org.jooq.impl.SQLDataType.CHAR(1), this, "数据范围");

    /**
     * The column <code>jeesite.sys_role.is_sys</code>. 是否系统数据
     */
    public final TableField<SysRoleRecord, String> IS_SYS = createField("is_sys", org.jooq.impl.SQLDataType.VARCHAR(64), this, "是否系统数据");

    /**
     * The column <code>jeesite.sys_role.useable</code>. 是否可用
     */
    public final TableField<SysRoleRecord, String> USEABLE = createField("useable", org.jooq.impl.SQLDataType.VARCHAR(64), this, "是否可用");

    /**
     * The column <code>jeesite.sys_role.create_by</code>. 创建者
     */
    public final TableField<SysRoleRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "创建者");

    /**
     * The column <code>jeesite.sys_role.create_date</code>. 创建时间
     */
    public final TableField<SysRoleRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>jeesite.sys_role.update_by</code>. 更新者
     */
    public final TableField<SysRoleRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "更新者");

    /**
     * The column <code>jeesite.sys_role.update_date</code>. 更新时间
     */
    public final TableField<SysRoleRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "更新时间");

    /**
     * The column <code>jeesite.sys_role.remarks</code>. 备注信息
     */
    public final TableField<SysRoleRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注信息");

    /**
     * The column <code>jeesite.sys_role.del_flag</code>. 删除标记
     */
    public final TableField<SysRoleRecord, String> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.CHAR)), this, "删除标记");

    /**
     * Create a <code>jeesite.sys_role</code> table reference
     */
    public SysRole() {
        this(DSL.name("sys_role"), null);
    }

    /**
     * Create an aliased <code>jeesite.sys_role</code> table reference
     */
    public SysRole(String alias) {
        this(DSL.name(alias), SYS_ROLE);
    }

    /**
     * Create an aliased <code>jeesite.sys_role</code> table reference
     */
    public SysRole(Name alias) {
        this(alias, SYS_ROLE);
    }

    private SysRole(Name alias, Table<SysRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysRole(Name alias, Table<SysRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("角色表"));
    }

    public <O extends Record> SysRole(Table<O> child, ForeignKey<O, SysRoleRecord> key) {
        super(child, key, SYS_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jeesite.JEESITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_ROLE_PRIMARY, Indexes.SYS_ROLE_SYS_ROLE_DEL_FLAG, Indexes.SYS_ROLE_SYS_ROLE_ENNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysRoleRecord> getPrimaryKey() {
        return Keys.KEY_SYS_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<SysRoleRecord>>asList(Keys.KEY_SYS_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysRole as(String alias) {
        return new SysRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysRole as(Name alias) {
        return new SysRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRole rename(String name) {
        return new SysRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRole rename(Name name) {
        return new SysRole(name, null);
    }
}
