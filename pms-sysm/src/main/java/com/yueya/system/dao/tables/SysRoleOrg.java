/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables;


import com.yueya.system.dao.Indexes;
import com.yueya.system.dao.Keys;
import com.yueya.system.dao.Pms;
import com.yueya.system.dao.tables.records.SysRoleOrgRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRoleOrg extends TableImpl<SysRoleOrgRecord> {

    private static final long serialVersionUID = 1046825229;

    /**
     * The reference instance of <code>pms.sys_role_org</code>
     */
    public static final SysRoleOrg SYS_ROLE_ORG = new SysRoleOrg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysRoleOrgRecord> getRecordType() {
        return SysRoleOrgRecord.class;
    }

    /**
     * The column <code>pms.sys_role_org.role_id</code>.
     */
    public final TableField<SysRoleOrgRecord, Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pms.sys_role_org.org_id</code>.
     */
    public final TableField<SysRoleOrgRecord, Long> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>pms.sys_role_org</code> table reference
     */
    public SysRoleOrg() {
        this(DSL.name("sys_role_org"), null);
    }

    /**
     * Create an aliased <code>pms.sys_role_org</code> table reference
     */
    public SysRoleOrg(String alias) {
        this(DSL.name(alias), SYS_ROLE_ORG);
    }

    /**
     * Create an aliased <code>pms.sys_role_org</code> table reference
     */
    public SysRoleOrg(Name alias) {
        this(alias, SYS_ROLE_ORG);
    }

    private SysRoleOrg(Name alias, Table<SysRoleOrgRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysRoleOrg(Name alias, Table<SysRoleOrgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SysRoleOrg(Table<O> child, ForeignKey<O, SysRoleOrgRecord> key) {
        super(child, key, SYS_ROLE_ORG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pms.PMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_ROLE_ORG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysRoleOrgRecord> getPrimaryKey() {
        return Keys.KEY_SYS_ROLE_ORG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysRoleOrgRecord>> getKeys() {
        return Arrays.<UniqueKey<SysRoleOrgRecord>>asList(Keys.KEY_SYS_ROLE_ORG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysRoleOrg as(String alias) {
        return new SysRoleOrg(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysRoleOrg as(Name alias) {
        return new SysRoleOrg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRoleOrg rename(String name) {
        return new SysRoleOrg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRoleOrg rename(Name name) {
        return new SysRoleOrg(name, null);
    }
}
