/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables.daos;


import com.yueya.common.base.BaseDao;
import com.yueya.system.dao.tables.pojos.SysOrganizationDO;
import com.yueya.system.dao.tables.records.SysOrganizationRecord;

import java.sql.Timestamp;
import java.util.List;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SysOrganizationDao extends BaseDao<SysOrganizationRecord, SysOrganizationDO, Long> {

    /**
     * Create a new SysOrganizationDao without any configuration
     */
    public SysOrganizationDao() {
        super(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION, SysOrganizationDO.class);
    }

    /**
     * Create a new SysOrganizationDao with an attached configuration
     */
    @Autowired
    public SysOrganizationDao(Configuration configuration) {
        super(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION, SysOrganizationDO.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(SysOrganizationDO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SysOrganizationDO> fetchById(Long... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SysOrganizationDO fetchOneById(Long value) {
        return fetchOne(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByName(String... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.NAME, values);
    }

    /**
     * Fetch records that have <code>parent_id IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByParentId(String... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.PARENT_ID, values);
    }

    /**
     * Fetch records that have <code>parent_ids IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByParentIds(String... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.PARENT_IDS, values);
    }

    /**
     * Fetch records that have <code>area_id IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByAreaId(Long... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.AREA_ID, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByType(String... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.TYPE, values);
    }

    /**
     * Fetch records that have <code>level IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByLevel(String... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.LEVEL, values);
    }

    /**
     * Fetch records that have <code>gmt_create IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByGmtCreate(Timestamp... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.GMT_CREATE, values);
    }

    /**
     * Fetch records that have <code>gmt_modified IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByGmtModified(Timestamp... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.GMT_MODIFIED, values);
    }

    /**
     * Fetch records that have <code>def_flag IN (values)</code>
     */
    public List<SysOrganizationDO> fetchByDefFlag(String... values) {
        return fetch(com.yueya.system.dao.tables.SysOrganization.SYS_ORGANIZATION.DEF_FLAG, values);
    }
}
