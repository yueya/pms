/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables;


import com.yueya.system.dao.Indexes;
import com.yueya.system.dao.Keys;
import com.yueya.system.dao.Pms;
import com.yueya.system.dao.tables.records.SysOrganizationRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysOrganization extends TableImpl<SysOrganizationRecord> {

    private static final long serialVersionUID = -135228059;

    /**
     * The reference instance of <code>pms.sys_organization</code>
     */
    public static final SysOrganization SYS_ORGANIZATION = new SysOrganization();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysOrganizationRecord> getRecordType() {
        return SysOrganizationRecord.class;
    }

    /**
     * The column <code>pms.sys_organization.id</code>. id
     */
    public final TableField<SysOrganizationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "id");

    /**
     * The column <code>pms.sys_organization.name</code>. 名称
     */
    public final TableField<SysOrganizationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "名称");

    /**
     * The column <code>pms.sys_organization.parent_id</code>. 父级id
     */
    public final TableField<SysOrganizationRecord, String> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "父级id");

    /**
     * The column <code>pms.sys_organization.parent_ids</code>. 所有父级id
     */
    public final TableField<SysOrganizationRecord, String> PARENT_IDS = createField("parent_ids", org.jooq.impl.SQLDataType.VARCHAR(255), this, "所有父级id");

    /**
     * The column <code>pms.sys_organization.area_id</code>. 区域id
     */
    public final TableField<SysOrganizationRecord, Long> AREA_ID = createField("area_id", org.jooq.impl.SQLDataType.BIGINT, this, "区域id");

    /**
     * The column <code>pms.sys_organization.type</code>. 类型
     */
    public final TableField<SysOrganizationRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CHAR(1), this, "类型");

    /**
     * The column <code>pms.sys_organization.level</code>. 级别
     */
    public final TableField<SysOrganizationRecord, String> LEVEL = createField("level", org.jooq.impl.SQLDataType.CHAR(1), this, "级别");

    /**
     * The column <code>pms.sys_organization.gmt_create</code>.
     */
    public final TableField<SysOrganizationRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>pms.sys_organization.gmt_modified</code>.
     */
    public final TableField<SysOrganizationRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>pms.sys_organization.def_flag</code>.
     */
    public final TableField<SysOrganizationRecord, String> DEF_FLAG = createField("def_flag", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * Create a <code>pms.sys_organization</code> table reference
     */
    public SysOrganization() {
        this(DSL.name("sys_organization"), null);
    }

    /**
     * Create an aliased <code>pms.sys_organization</code> table reference
     */
    public SysOrganization(String alias) {
        this(DSL.name(alias), SYS_ORGANIZATION);
    }

    /**
     * Create an aliased <code>pms.sys_organization</code> table reference
     */
    public SysOrganization(Name alias) {
        this(alias, SYS_ORGANIZATION);
    }

    private SysOrganization(Name alias, Table<SysOrganizationRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysOrganization(Name alias, Table<SysOrganizationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SysOrganization(Table<O> child, ForeignKey<O, SysOrganizationRecord> key) {
        super(child, key, SYS_ORGANIZATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pms.PMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_ORGANIZATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SysOrganizationRecord, Long> getIdentity() {
        return Keys.IDENTITY_SYS_ORGANIZATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysOrganizationRecord> getPrimaryKey() {
        return Keys.KEY_SYS_ORGANIZATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysOrganizationRecord>> getKeys() {
        return Arrays.<UniqueKey<SysOrganizationRecord>>asList(Keys.KEY_SYS_ORGANIZATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganization as(String alias) {
        return new SysOrganization(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganization as(Name alias) {
        return new SysOrganization(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysOrganization rename(String name) {
        return new SysOrganization(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysOrganization rename(Name name) {
        return new SysOrganization(name, null);
    }
}
