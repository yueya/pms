/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables;


import com.yueya.system.dao.Indexes;
import com.yueya.system.dao.Jeesite;
import com.yueya.system.dao.Keys;
import com.yueya.system.dao.tables.records.SysDictRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 字典表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysDict extends TableImpl<SysDictRecord> {

    private static final long serialVersionUID = 1170886610;

    /**
     * The reference instance of <code>jeesite.sys_dict</code>
     */
    public static final SysDict SYS_DICT = new SysDict();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysDictRecord> getRecordType() {
        return SysDictRecord.class;
    }

    /**
     * The column <code>jeesite.sys_dict.id</code>. 编号
     */
    public final TableField<SysDictRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "编号");

    /**
     * The column <code>jeesite.sys_dict.value</code>. 数据值
     */
    public final TableField<SysDictRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "数据值");

    /**
     * The column <code>jeesite.sys_dict.label</code>. 标签名
     */
    public final TableField<SysDictRecord, String> LABEL = createField("label", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "标签名");

    /**
     * The column <code>jeesite.sys_dict.type</code>. 类型
     */
    public final TableField<SysDictRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "类型");

    /**
     * The column <code>jeesite.sys_dict.description</code>. 描述
     */
    public final TableField<SysDictRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "描述");

    /**
     * The column <code>jeesite.sys_dict.sort</code>. 排序（升序）
     */
    public final TableField<SysDictRecord, Long> SORT = createField("sort", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "排序（升序）");

    /**
     * The column <code>jeesite.sys_dict.parent_id</code>. 父级编号
     */
    public final TableField<SysDictRecord, String> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "父级编号");

    /**
     * The column <code>jeesite.sys_dict.create_by</code>. 创建者
     */
    public final TableField<SysDictRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "创建者");

    /**
     * The column <code>jeesite.sys_dict.create_date</code>. 创建时间
     */
    public final TableField<SysDictRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>jeesite.sys_dict.update_by</code>. 更新者
     */
    public final TableField<SysDictRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "更新者");

    /**
     * The column <code>jeesite.sys_dict.update_date</code>. 更新时间
     */
    public final TableField<SysDictRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "更新时间");

    /**
     * The column <code>jeesite.sys_dict.remarks</code>. 备注信息
     */
    public final TableField<SysDictRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注信息");

    /**
     * The column <code>jeesite.sys_dict.del_flag</code>. 删除标记
     */
    public final TableField<SysDictRecord, String> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.CHAR)), this, "删除标记");

    /**
     * Create a <code>jeesite.sys_dict</code> table reference
     */
    public SysDict() {
        this(DSL.name("sys_dict"), null);
    }

    /**
     * Create an aliased <code>jeesite.sys_dict</code> table reference
     */
    public SysDict(String alias) {
        this(DSL.name(alias), SYS_DICT);
    }

    /**
     * Create an aliased <code>jeesite.sys_dict</code> table reference
     */
    public SysDict(Name alias) {
        this(alias, SYS_DICT);
    }

    private SysDict(Name alias, Table<SysDictRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysDict(Name alias, Table<SysDictRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("字典表"));
    }

    public <O extends Record> SysDict(Table<O> child, ForeignKey<O, SysDictRecord> key) {
        super(child, key, SYS_DICT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jeesite.JEESITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_DICT_PRIMARY, Indexes.SYS_DICT_SYS_DICT_DEL_FLAG, Indexes.SYS_DICT_SYS_DICT_LABEL, Indexes.SYS_DICT_SYS_DICT_VALUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysDictRecord> getPrimaryKey() {
        return Keys.KEY_SYS_DICT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysDictRecord>> getKeys() {
        return Arrays.<UniqueKey<SysDictRecord>>asList(Keys.KEY_SYS_DICT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysDict as(String alias) {
        return new SysDict(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysDict as(Name alias) {
        return new SysDict(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysDict rename(String name) {
        return new SysDict(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysDict rename(Name name) {
        return new SysDict(name, null);
    }
}
