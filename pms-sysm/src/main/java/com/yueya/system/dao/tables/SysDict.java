/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables;


import com.yueya.system.dao.Indexes;
import com.yueya.system.dao.Keys;
import com.yueya.system.dao.Pms;
import com.yueya.system.dao.tables.records.SysDictRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysDict extends TableImpl<SysDictRecord> {

    private static final long serialVersionUID = -628600395;

    /**
     * The reference instance of <code>pms.sys_dict</code>
     */
    public static final SysDict SYS_DICT = new SysDict();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysDictRecord> getRecordType() {
        return SysDictRecord.class;
    }

    /**
     * The column <code>pms.sys_dict.id</code>. id
     */
    public final TableField<SysDictRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "id");

    /**
     * The column <code>pms.sys_dict.name</code>. 字典名称
     */
    public final TableField<SysDictRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(500), this, "字典名称");

    /**
     * The column <code>pms.sys_dict.code</code>. 字典标识
     */
    public final TableField<SysDictRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "字典标识");

    /**
     * The column <code>pms.sys_dict.sort</code>. 排序字段
     */
    public final TableField<SysDictRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER, this, "排序字段");

    /**
     * The column <code>pms.sys_dict.type</code>. 字典类型
     */
    public final TableField<SysDictRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(255), this, "字典类型");

    /**
     * The column <code>pms.sys_dict.gmt_create</code>. 创建时间
     */
    public final TableField<SysDictRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>pms.sys_dict.gmt_modified</code>. 修改时间
     */
    public final TableField<SysDictRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>pms.sys_dict.del_flag</code>. 删除标记
     */
    public final TableField<SysDictRecord, String> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.CHAR(1), this, "删除标记");

    /**
     * Create a <code>pms.sys_dict</code> table reference
     */
    public SysDict() {
        this(DSL.name("sys_dict"), null);
    }

    /**
     * Create an aliased <code>pms.sys_dict</code> table reference
     */
    public SysDict(String alias) {
        this(DSL.name(alias), SYS_DICT);
    }

    /**
     * Create an aliased <code>pms.sys_dict</code> table reference
     */
    public SysDict(Name alias) {
        this(alias, SYS_DICT);
    }

    private SysDict(Name alias, Table<SysDictRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysDict(Name alias, Table<SysDictRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SysDict(Table<O> child, ForeignKey<O, SysDictRecord> key) {
        super(child, key, SYS_DICT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pms.PMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_DICT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SysDictRecord, ULong> getIdentity() {
        return Keys.IDENTITY_SYS_DICT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysDictRecord> getPrimaryKey() {
        return Keys.KEY_SYS_DICT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysDictRecord>> getKeys() {
        return Arrays.<UniqueKey<SysDictRecord>>asList(Keys.KEY_SYS_DICT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysDict as(String alias) {
        return new SysDict(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysDict as(Name alias) {
        return new SysDict(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysDict rename(String name) {
        return new SysDict(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysDict rename(Name name) {
        return new SysDict(name, null);
    }
}
