/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables;


import com.yueya.system.dao.Indexes;
import com.yueya.system.dao.Keys;
import com.yueya.system.dao.Pms;
import com.yueya.system.dao.tables.records.SysUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysUser extends TableImpl<SysUserRecord> {

    private static final long serialVersionUID = 774076358;

    /**
     * The reference instance of <code>pms.sys_user</code>
     */
    public static final SysUser SYS_USER = new SysUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysUserRecord> getRecordType() {
        return SysUserRecord.class;
    }

    /**
     * The column <code>pms.sys_user.id</code>. 编号
     */
    public final TableField<SysUserRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "编号");

    /**
     * The column <code>pms.sys_user.user_code</code>. 用户标识码
     */
    public final TableField<SysUserRecord, String> USER_CODE = createField("user_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "用户标识码");

    /**
     * The column <code>pms.sys_user.organization_id</code>. 归属组织
     */
    public final TableField<SysUserRecord, String> ORGANIZATION_ID = createField("organization_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "归属组织");

    /**
     * The column <code>pms.sys_user.department_id</code>. 归属部门
     */
    public final TableField<SysUserRecord, String> DEPARTMENT_ID = createField("department_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "归属部门");

    /**
     * The column <code>pms.sys_user.login_name</code>. 登录名
     */
    public final TableField<SysUserRecord, String> LOGIN_NAME = createField("login_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "登录名");

    /**
     * The column <code>pms.sys_user.password</code>. 密码
     */
    public final TableField<SysUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "密码");

    /**
     * The column <code>pms.sys_user.user_no</code>. 工号
     */
    public final TableField<SysUserRecord, String> USER_NO = createField("user_no", org.jooq.impl.SQLDataType.VARCHAR(100), this, "工号");

    /**
     * The column <code>pms.sys_user.name</code>. 姓名
     */
    public final TableField<SysUserRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "姓名");

    /**
     * The column <code>pms.sys_user.email</code>. 邮箱
     */
    public final TableField<SysUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(200), this, "邮箱");

    /**
     * The column <code>pms.sys_user.phone</code>. 电话
     */
    public final TableField<SysUserRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(200), this, "电话");

    /**
     * The column <code>pms.sys_user.mobile</code>. 手机
     */
    public final TableField<SysUserRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(200), this, "手机");

    /**
     * The column <code>pms.sys_user.user_type</code>. 用户类型
     */
    public final TableField<SysUserRecord, String> USER_TYPE = createField("user_type", org.jooq.impl.SQLDataType.CHAR(1), this, "用户类型");

    /**
     * The column <code>pms.sys_user.photo</code>. 用户头像
     */
    public final TableField<SysUserRecord, String> PHOTO = createField("photo", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "用户头像");

    /**
     * The column <code>pms.sys_user.login_ip</code>. 最后登陆IP
     */
    public final TableField<SysUserRecord, String> LOGIN_IP = createField("login_ip", org.jooq.impl.SQLDataType.VARCHAR(100), this, "最后登陆IP");

    /**
     * The column <code>pms.sys_user.login_date</code>. 最后登陆时间
     */
    public final TableField<SysUserRecord, Timestamp> LOGIN_DATE = createField("login_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最后登陆时间");

    /**
     * The column <code>pms.sys_user.login_flag</code>. 是否可登录
     */
    public final TableField<SysUserRecord, String> LOGIN_FLAG = createField("login_flag", org.jooq.impl.SQLDataType.VARCHAR(64), this, "是否可登录");

    /**
     * The column <code>pms.sys_user.gmt_create</code>. 创建时间
     */
    public final TableField<SysUserRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>pms.sys_user.gmt_modified</code>. 更新时间
     */
    public final TableField<SysUserRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "更新时间");

    /**
     * The column <code>pms.sys_user.remarks</code>. 备注信息
     */
    public final TableField<SysUserRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注信息");

    /**
     * The column <code>pms.sys_user.del_flag</code>. 删除标记
     */
    public final TableField<SysUserRecord, String> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.CHAR)), this, "删除标记");

    /**
     * Create a <code>pms.sys_user</code> table reference
     */
    public SysUser() {
        this(DSL.name("sys_user"), null);
    }

    /**
     * Create an aliased <code>pms.sys_user</code> table reference
     */
    public SysUser(String alias) {
        this(DSL.name(alias), SYS_USER);
    }

    /**
     * Create an aliased <code>pms.sys_user</code> table reference
     */
    public SysUser(Name alias) {
        this(alias, SYS_USER);
    }

    private SysUser(Name alias, Table<SysUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysUser(Name alias, Table<SysUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户表"));
    }

    public <O extends Record> SysUser(Table<O> child, ForeignKey<O, SysUserRecord> key) {
        super(child, key, SYS_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pms.PMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_USER_PRIMARY, Indexes.SYS_USER_SYS_USER_DEL_FLAG, Indexes.SYS_USER_SYS_USER_DEPARTMENT_ID, Indexes.SYS_USER_SYS_USER_LOGIN_NAME, Indexes.SYS_USER_SYS_USER_ORGANIZATION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SysUserRecord, Long> getIdentity() {
        return Keys.IDENTITY_SYS_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysUserRecord> getPrimaryKey() {
        return Keys.KEY_SYS_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysUserRecord>> getKeys() {
        return Arrays.<UniqueKey<SysUserRecord>>asList(Keys.KEY_SYS_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUser as(String alias) {
        return new SysUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUser as(Name alias) {
        return new SysUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUser rename(String name) {
        return new SysUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUser rename(Name name) {
        return new SysUser(name, null);
    }
}
