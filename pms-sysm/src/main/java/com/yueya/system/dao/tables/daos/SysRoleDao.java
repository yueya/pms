/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables.daos;


import com.yueya.common.base.BaseDao;
import com.yueya.system.dao.Tables;
import com.yueya.system.dao.tables.SysRole;
import com.yueya.system.dao.tables.SysUser;
import com.yueya.system.dao.tables.pojos.SysRoleDO;
import com.yueya.system.dao.tables.records.SysRoleRecord;

import java.sql.Timestamp;
import java.util.Date;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Configuration;
import org.jooq.DSLContext;
import org.jooq.impl.DSL;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SysRoleDao extends BaseDao<SysRoleRecord, SysRoleDO, Long> {

    /**
     * Create a new SysRoleDao without any configuration
     */
    public SysRoleDao() {
        super(com.yueya.system.dao.tables.SysRole.SYS_ROLE, SysRoleDO.class);
    }

    /**
     * Create a new SysRoleDao with an attached configuration
     */
    @Autowired
    public SysRoleDao(Configuration configuration) {
        super(com.yueya.system.dao.tables.SysRole.SYS_ROLE, SysRoleDO.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(SysRoleDO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SysRoleDO> fetchById(Long... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SysRoleDO fetchOneById(Long value) {
        return fetchOne(com.yueya.system.dao.tables.SysRole.SYS_ROLE.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<SysRoleDO> fetchByName(String... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.NAME, values);
    }

    /**
     * Fetch records that have <code>en_name IN (values)</code>
     */
    public List<SysRoleDO> fetchByEnName(String... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.EN_NAME, values);
    }

    /**
     * Fetch records that have <code>role_type IN (values)</code>
     */
    public List<SysRoleDO> fetchByRoleType(String... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.ROLE_TYPE, values);
    }

    /**
     * Fetch records that have <code>sort IN (values)</code>
     */
    public List<SysRoleDO> fetchBySort(String... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.SORT, values);
    }

    /**
     * Fetch records that have <code>remarks IN (values)</code>
     */
    public List<SysRoleDO> fetchByRemarks(String... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.REMARKS, values);
    }

    /**
     * Fetch records that have <code>gmt_create IN (values)</code>
     */
    public List<SysRoleDO> fetchByGmtCreate(Timestamp... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.GMT_CREATE, values);
    }

    /**
     * Fetch records that have <code>gmt_modified IN (values)</code>
     */
    public List<SysRoleDO> fetchByGmtModified(Timestamp... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.GMT_MODIFIED, values);
    }

    /**
     * Fetch records that have <code>del_flag IN (values)</code>
     */
    public List<SysRoleDO> fetchByDelFlag(String... values) {
        return fetch(com.yueya.system.dao.tables.SysRole.SYS_ROLE.DEL_FLAG, values);
    }

    public List<SysRoleDO> fetchByUserId(long userId) {
        DSLContext create= DSL.using(super.configuration());
        List<SysRoleDO> list=create.select().from(getTable())
                .join(Tables.SYS_USER_ROLE)
                .on(Tables.SYS_ROLE.ID.eq(Tables.SYS_USER_ROLE.ROLE_ID))
                .where(Tables.SYS_USER_ROLE.USER_ID.eq(userId)
                        .and(Tables.SYS_ROLE.DEL_FLAG.equal(DEL_NORMAL)))
                .fetchInto(getType());
        return list;
    }
}
