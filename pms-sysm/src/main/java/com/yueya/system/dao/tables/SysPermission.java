/*
 * This file is generated by jOOQ.
 */
package com.yueya.system.dao.tables;


import com.yueya.system.dao.Indexes;
import com.yueya.system.dao.Keys;
import com.yueya.system.dao.Pms;
import com.yueya.system.dao.tables.records.SysPermissionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermission extends TableImpl<SysPermissionRecord> {

    private static final long serialVersionUID = -1558461921;

    /**
     * The reference instance of <code>pms.sys_permission</code>
     */
    public static final SysPermission SYS_PERMISSION = new SysPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysPermissionRecord> getRecordType() {
        return SysPermissionRecord.class;
    }

    /**
     * The column <code>pms.sys_permission.id</code>. id
     */
    public final TableField<SysPermissionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "id");

    /**
     * The column <code>pms.sys_permission.name</code>. 权限名称
     */
    public final TableField<SysPermissionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "权限名称");

    /**
     * The column <code>pms.sys_permission.type</code>. 权限类型
     */
    public final TableField<SysPermissionRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(255), this, "权限类型");

    /**
     * The column <code>pms.sys_permission.identification</code>. 权限标识
     */
    public final TableField<SysPermissionRecord, String> IDENTIFICATION = createField("identification", org.jooq.impl.SQLDataType.VARCHAR(255), this, "权限标识");

    /**
     * The column <code>pms.sys_permission.system_code</code>. 所属系统标识
     */
    public final TableField<SysPermissionRecord, String> SYSTEM_CODE = createField("system_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "所属系统标识");

    /**
     * The column <code>pms.sys_permission.gmt_create</code>. 创建时间
     */
    public final TableField<SysPermissionRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>pms.sys_permission.gmt_modified</code>. 修改时间
     */
    public final TableField<SysPermissionRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>pms.sys_permission.sort</code>. 排序号
     */
    public final TableField<SysPermissionRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER, this, "排序号");

    /**
     * The column <code>pms.sys_permission.del_flag</code>. 删除标记
     */
    public final TableField<SysPermissionRecord, String> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.CHAR(1), this, "删除标记");

    /**
     * Create a <code>pms.sys_permission</code> table reference
     */
    public SysPermission() {
        this(DSL.name("sys_permission"), null);
    }

    /**
     * Create an aliased <code>pms.sys_permission</code> table reference
     */
    public SysPermission(String alias) {
        this(DSL.name(alias), SYS_PERMISSION);
    }

    /**
     * Create an aliased <code>pms.sys_permission</code> table reference
     */
    public SysPermission(Name alias) {
        this(alias, SYS_PERMISSION);
    }

    private SysPermission(Name alias, Table<SysPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysPermission(Name alias, Table<SysPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SysPermission(Table<O> child, ForeignKey<O, SysPermissionRecord> key) {
        super(child, key, SYS_PERMISSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pms.PMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SysPermissionRecord, Long> getIdentity() {
        return Keys.IDENTITY_SYS_PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysPermissionRecord> getPrimaryKey() {
        return Keys.KEY_SYS_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<SysPermissionRecord>>asList(Keys.KEY_SYS_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermission as(String alias) {
        return new SysPermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermission as(Name alias) {
        return new SysPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysPermission rename(String name) {
        return new SysPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysPermission rename(Name name) {
        return new SysPermission(name, null);
    }
}
